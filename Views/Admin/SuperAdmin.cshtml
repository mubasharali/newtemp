@{
    ViewBag.Title = "Manage Users";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-sm-6">
            <h2>Admins list</h2>
            <div data-bind="foreach:showAdmins">
                <a data-bind="attr:{href:'/User/Index/' + id },text:name"></a><br />
            </div>
            <h2>Make admin</h2>
            <input type="email" data-bind="value:adminEmail" />
            <button class="btn btn-default" data-bind="click:makeAdminBtn">Submit</button>
        </div>
        @*visit user profile on the basis of email*@
        <div class="col-sm-6">
            <h2>Block User</h2>
            <input type="email" data-bind="value:blockUserEmail" placeholder="email" />
            <button class="btn btn-default" data-bind="click:blockUserEmailBtn">Submit</button>
        </div>
        <div class="col-sm-6">
            <h2>Open User</h2>
            <input type="email" data-bind="value:openUserEmail" placeholder="email" />
            <button class="btn btn-default" data-bind="click:openUserProfileBtn">Submit</button>
        </div>
        <div class="col-sm-6">
            <h2>Block User</h2>
            <input type="email" data-bind="value:blockUserId" placeholder="id" />
            <button class="btn btn-default" data-bind="click:blockUserIdBtn">Submit</button>
        </div>
        <div class="col-sm-6">
            <h2>Send Email</h2>
            @*<input type="email" data-bind="value:blockUserId" placeholder="id" />*@
            <button class="btn btn-default" data-bind="click:sendEmail">Submit</button>
        </div>
    </div>
    <hr /><hr />
    <div class="row">
        <div class="col-sm-6">
            <button data-bind="click:executeJobBtn">Execute job</button>
        </div>
    </div>
</div>
@section Styles {
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
}


@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/autosize")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/plugins/sweetAlert")
    <script src="~/Scripts/app/GetLoginUserId.js"></script>
    <script>
        function Admin(data) {
            var self = this;
            data = data || {};
            self.id = data.id;
            self.name = data.name;
        }
        function ViewModel() {
            console.log(loginUserId());
            SearchingLocation();
            ChatViewModel();
            AccountViewModel();
            var self = this;
            self.executeJobBtn = function () {
                $.ajax({
                    url: '/Admin/ExecuteJob',
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.info("Success");
                    },
                    error: function () {
                        toastr.info("Error! please refresh page and try again");
                    },
                });
            }
            self.sendEmail = function () {
                $.ajax({
                    url: '/api/Admin/SendEmail',
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.info("done");
                    },
                    error: function () {
                        toastr.info("Error! please refresh page and try again");
                    },
                });
            }
            self.loginUserId = ko.observable( loginUserId());
            self.adminEmail = ko.observable();
            self.blockUserEmail = ko.observable();
            self.blockUserId = ko.observable();
            self.openUserEmail = ko.observable();
            self.showAdmins = ko.observableArray();
            self.loadAdmins = function () {
                $.ajax({
                    url: '/api/Admin/GetAllAdmin',
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        var tags = $.map(data, function (item) { return new Admin(item); });
                        self.showAdmins(tags);
                    },
                    error: function () {
                        toastr.info("Error! please refresh page and try again");
                    },
                });
            }
            self.loadAdmins();
            self.makeAdminBtn = function () {
                $.ajax({
                    url: '/api/Admin/MakeAdmin?email=' + self.adminEmail(),
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.info("Success!");
                    },
                    error: function () {
                        toastr.info("Error! please refresh page and try again");
                    },
                });
            }
            self.blockUserEmailBtn = function () {
                $.ajax({
                    url: '/api/Admin/BlockUserEmail?email=' + self.blockUserEmail(),
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.error("Successfully blocked!");

                    },
                    error: function () {
                        toastr.error("Error! please refresh page and try again");
                    },
                });
            }
            self.blockUserIdBtn = function () {
                $.ajax({
                    url: '/api/Admin/BlockUser?id=' + self.blockUserId(),
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.error("Successfully blocked!");
                        
                    },
                    error: function () {
                        toastr.error("Error! please refresh page and try again");
                    },
                });
            }
            self.openUserProfileBtn = function () {
                $.ajax({
                    url: '/api/Admin/openUser?email=' + self.openUserEmail(),
                    dataType: "json",
                    type: 'POST',
                    success: function (data) {
                        toastr.info("Done! redirecting");
                        window.location.href = "/User/Index/" + data;
                    },
                    error: function () {
                        toastr.error("Error! please refresh page and try again");
                    },
                });
            }

        }
        function getTimeAgo(varDate) {
            if (varDate) {
                return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
            }
            else {
                return '';
            }
        }
        ko.bindingHandlers.jqAutoresize = {
            init: function (element, valueAccessor, aBA, vm) {
                if (!$(element).hasClass('msgTextArea')) {
                    $(element).css('height', '1em');
                }
                $(element).autosize();
            }
        };

        $(function () {
            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            ko.applyBindings(new ViewModel());
        });
    </script>
}


