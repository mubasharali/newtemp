@model IEnumerable<Inspinia_MVC5_SeedProject.Models.Ad>

@{
    ViewBag.Title = "Services";
}
@*index page*@
<input type="hidden" value="Services"  id="category"/>
<div class="row wrapper wrapper-content animated white-bg fadeInRight">
        <div class="row">
            <div class="col-sm-12">
                <p>&nbsp</p>
                <div class="control-group form-horizontal">
                    <label class="control-label col-sm-5" for="select-repo">What are you looking for <br /><small class="text-navy hidden-xs">pick tags</small></label>
                    <div class="col-sm-5 col-md-4">
                        <input id="select-tag" name="tags" data-bind="value:tags" class="repositories" placeholder="e.g, Mobile repair, plumber, travel agencies.." />
                    </div>
                </div>
                <p>&nbsp</p>

            </div>
        </div><br />
        <div class="row">
            <div class="col-lg-4"></div>
            <div class="col-sm-8 col-md-9 col-lg-7">
                <div data-bind="visible:isLoading()">
                    @Html.Partial("/Views/Shared/_LoadingBoxes.cshtml") 
                </div>
                <div id="FirstLoading" style="display:none" data-bind="visible:!isLoading()">
                    @*<a data-bind="click:function(){ return createAd('/Company/Create')}" data-style="expand-left" class=" pull-right btn btn-danger">Provide a service </a>*@
                    <a href="/Services" data-style="expand-left" class=" pull-right btn btn-danger">I'm service consumer </a>
                    <span data-bind="text:showAds().length"> </span> results found<br />
                    <b>Summary:</b> Showing <span data-bind="visible: !( minPrice() != 0 || maxPrice() != 50000 || searchingCity()  || tags() )"> all </span> ads
                    <span data-bind="visible:tags()"> with tags <b> '<span data-bind="text:tags"></span>' </b></span>

                    <span data-bind="visible:minPrice()!= 0 && maxPrice()!= 50000">
                        with price from <b> <span data-bind="text:minPrice"></span> </b> to <b> <span data-bind="text:maxPrice"></span></b>
                    </span>
                    <span data-bind="visible:! (minPrice()!= 0 && maxPrice()!= 50000)">
                        <span data-bind="visible:minPrice() != 0"> with min price <b> <span data-bind="text:minPrice"></span> </b> </span>
                        <span data-bind="visible:maxPrice()!= 50000">with max price <b> <span data-bind="text:maxPrice"></span> </b> </span>
                    </span>
                    <span data-bind="visible:searchingCity"> from <b> <span data-bind="visible:searchingPP"><span data-bind="text:searchingPP"></span>,</span> <span data-bind="text:searchingCity"></span> </b> </span>
                    <div class=" alert alert-success">
                        <strong>If you are service provider then we recommend you to <a href="/Company/Create"> create a business page! </a></strong>
                    </div>
                    <div class="col-lg-12">
                        <div data-bind="foreach:showAds">
                            @Html.Partial("/Views/Shared/_AdListView.cshtml")
                        </div>
                    </div>
                    @*<div class="row">
                        <br /> <br /><br />
                        <div data-bind="foreach:showAds">
                            @Html.Partial("~/Views/Company/_CompanyListView.cshtml")
                        </div>
                    </div>*@
                </div>
            </div>
        </div>
</div>

@section Styles {
    @Styles.Render("~/plugins/slickStyles")
    @Styles.Render("~/plugins/slickThemeStyles")
    @Styles.Render("~/plugins/toastrStyles")
    <link href="~/Content/plugins/jsTree/style.css" rel="stylesheet" />
    @Styles.Render("~/bundles/tagStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")

}

@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/autosize")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/plugins/slick")
    @Scripts.Render("~/plugins/jsTree")
    @Scripts.Render("~/plugins/ionRange")

    <script src="~/Scripts/app/SearchAds.js"></script>
    <script src="~/Scripts/app/slick-knockout-binding.js"></script>
    <script src="~/Scripts/app/CreateAlert.js"></script>
    <script src="~/Scripts/app/ConvertToSlug.js"></script>
    <script src="~/Scripts/app/_AdListView.js"></script>
    @*    <script src="~/Scripts/app/SearchAds.js"></script>*@
    <script src="~/Scripts/app/_Truncate-knockout-binding.js"></script>
    <script src="~/Scripts/app/GetLoginUserId.js"></script>
    @*<script src="~/Scripts/app/Company/CompanySearch.js"></script>*@
    <script>
        function HandleCategories() {
            var self = this;
           // self.selectedTag = ko.observable();
            self.availableCategories = [];
            self.availableCategories = ["Computer Repair", "Home Appliance Repair", "Movers and Packers", "Drivers and Taxi", "Event Services", "Maids and Domestic help", "Education and classes", "Web Development", "other services"];

            subCategoryClicked = function (category) {
                linktemp = "../" + convertToSlug(category);
                window.location.href = linktemp;
            }
            var columedRow = {
                items: ko.observableArray(),
                columnLength: ko.observable(3)
            };
            $.each((self.availableCategories), function (i, item) {
                columedRow.items.push(item);
            });


            //return an array of rows.  Each row is an array of items
            columedRow.rows = ko.computed(function () {
                var result = [],
                    row,
                    colLength = parseInt(this.columnLength(), 10);

                //loop through items and push each item to a row array that gets pushed to the final result
                for (var i = 0, j = this.items().length; i < j; i++) {
                    if (i % colLength === 0) {
                        if (row) {
                            result.push(row);
                        }
                        row = [];
                    }
                    row.push(this.items()[i]);
                }

                //push the final row
                if (row) {
                    result.push(row);
                }

                return result;
            }, columedRow);

            ko.applyBindings(columedRow);
        }
        //function HandleSearch() {
        //    var self = this;
        //    self.selectedTag = ko.observable();
        //}
        function viewModel() {
          //  selectedCategory("Services");
            SearchingLocation();
            CreateAlert();
           TreeViewModel(); //in searchads.js
            //  RefreshSearch();
           
            ChatViewModel();
            AccountViewModel();
            var self = this;
           // HandleSearch();
          //  HandleCategories();
            //self.showAds = ko.observableArray();
            //self.tags = ko.observable();
            //self.title = ko.observable();
            //self.title.subscribe(function () {
            //    self.loadad();
            //})
            //self.tags.subscribe(function () {
            //    console.log(self.tags());
            //    self.loadad();
            //})
            //self.loadad = function () {
            //    url_address = '/api/Company/SearchCompanies?title=' + self.title() + '&tags=' + self.tags();
            //    $.ajax({
            //        url: url_address,
            //        dataType: "json",
            //        contentType: "application/json",
            //        cache: false,
            //        type: 'POST',
            //        success: function (data) {
            //            var mappedads = $.map(data, function (item) { return new Company(item); });
            //            self.showAds(mappedads);

            //        },
            //        error: function () {
            //            toastr.error("Unable to load data. Please try again", "Error");
            //        }
            //    });
            //}
            //self.loadad();
            return self;
        }
        //tree

        function getTimeAgo(varDate) {
            if (varDate) {
                return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
            }
            else {
                return '';
            }
        }
        ko.bindingHandlers.jqAutoresize = {
            init: function (element, valueAccessor, aBA, vm) {
                if (!$(element).hasClass('msgTextArea')) {
                    $(element).css('height', '1em');
                }
                $(element).autosize();
            }
        };
        $("#ionrange_1").ionRangeSlider({
            min: 0,
            max: 50000,
            type: 'double',
            prefix: "Rs",
            maxPostfix: "+",
            prettify: false,
            hasGrid: true
        });
        $('#select-tag').selectize({
            valueField: 'name',
            labelField: 'name',
            searchField: 'name',
            options: [],
            maxItems: 4,
            render: {
                option: function (item, escape) {
                    return '<div>' +
                        '<span class="title">' +
                            '<span class="name">' + escape(item.name) + '</span>' +

                        '</span>' +
                        '<span class="description">' + escape(item.info) + '</span>' +
                        '<ul class="meta">' +
                            '<li class="watchers"><span>' + escape(item.followers) + '</span> followers</li>' +
                            '<li class="forks"><span>' + escape(item.questions) + '</span> times used</li>' +
                        '</ul>' +
                    '</div>';
                }
            },
            load: function (query, callback) {
                if (!query.length) return callback();
                $.ajax({
                    url: '/api/Tag/SearchTags?s=' + encodeURIComponent(query),
                    type: 'GET',
                    error: function () {
                        callback();
                    },
                    success: function (res) {
                        callback(res.slice(0, 10));
                    }
                });
            }
        });
        $(function () {
            $('.ladda-button').ladda('bind', { timeout: 200000 });

            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            $('.product-images').slick({
                dots: true
            });
            var length = $(window).width();
            if (length < 786) { //770
                $(".collapse-link").click();
            }
            ko.applyBindings(new viewModel);
        });

    </script>
}





