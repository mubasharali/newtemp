@model Inspinia_MVC5_SeedProject.Models.ListViewModel
@using System.Configuration;
@using Inspinia_MVC5_SeedProject;
@{
    string freindlyCity = Session["City"] == null ? " in Pakistan" : " in " + Session["City"].ToString();
    if (ViewBag.category == "Jobs")
    {
        if (ViewBag.subcategory == null)
        {
            ViewBag.metaDescription = "Find best Jobs" + freindlyCity + ", jobs listings and job opportunities on dealkar.pk. Browse thousands of jobs" + freindlyCity + " and apply for free! dealkar.pk is leading jobs website" + freindlyCity;
        }
        else
        {
            ViewBag.metaDescription = "Looking for " + StringExt.GenerateSlug(ViewBag.subcategory)+ " Jobs? Find best " + StringExt.GenerateSlug(ViewBag.subcategory) + " Jobs" + freindlyCity + " and apply for free! dealkar.pk is leading " + StringExt.GenerateSlug(ViewBag.subcategory) + " jobs website" + freindlyCity;
        }
    }
    else
    {
        ViewBag.metaDescription = "Looking for " + ViewBag.category + "? Find thousands of " + ViewBag.category + freindlyCity + " at cheap prices.";
    }
    //else
    {
        //if (ViewBag.subcategory == "Books & Study Material")
        //{
        //    ViewBag.metaDescription = "Buy and sell second hand books. Find New Books, Magazines and other study material";
        //}
        //else if (ViewBag.subcategory == "Classes")
        //{
        //    ViewBag.metaDescription = "Entry test classes, distance learning classes, hobby clases, social classes, cooking classes, Online Classes, Study from home.";
        //}
        //else if (ViewBag.subcategory == "Courses")
        //{
        //    ViewBag.metaDescription = "Short Courses, Online Learning, Study from home. Contains information about courses";
        //}
        //else if (ViewBag.subcategory == "Home Tuitions")
        //{
        //    ViewBag.metaDescription = "Quality home Tutor are availabe in all over Pakistan. Are you a teacher? Become a tutor and earn money.";
        //}
        //else if (ViewBag.subcategory == "Others in Education & Learning")
        //{
        //    ViewBag.metaDescription = "Buy and sell bags,calculators and other study material";
        //}
        //else
        //{
        //    ViewBag.metaDescription = "Education and Learning category contains books, Home tuitions, information about classes and courses";
        //}
    }
    ViewBag.Title = (ViewBag.subcategory == null ? ViewBag.category : ViewBag.subcategory) + (Session["City"] == null ? "" : " in " + Session["City"].ToString());
    string actionLink = (ViewBag.subcategory == null ? StringExt.GenerateSlug(ViewBag.category) : StringExt.GenerateSlug(ViewBag.subcategory));

}

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-12">
        <span style="margin-top:18px" class="hidden-xs pull-right">
            @if (ViewBag.subcategory == null)
            {
                <a data-bind="click:function(){ return createAd('/Jobs/Create')}" data-style="expand-left" class=" pull-right btn btn-danger">Post Ad in @ViewBag.category</a>
            }
            else
            {
                <a data-bind="click:function(){ return createAd('/Jobs/Create')}" data-style="expand-left" class=" pull-right btn btn-danger">Post Ad in @ViewBag.subcategory</a>
            }

            @*@if (ViewBag.category == "Education-Learning")
                {
                    <a data-bind="click:function(){ return createAd('/Home/Create?category=Education-Learning')}" data-style="expand-left" class=" pull-right btn btn-danger">Post Ad in @ViewBag.subcategory</a>
                }
                else if (ViewBag.category == "Fashion")
                {
                    <a data-bind="click:function(){ return createAd('/Home/Create?category=Fashion')}" data-style="expand-left" class=" pull-right btn btn-danger">Post Ad in @ViewBag.subcategory</a>
                }*@
        </span>
        @if (ViewBag.subcategory != null)
        {
            <h2>@ViewBag.subcategory</h2>
        }
        else
        {
            <h2>@ViewBag.category</h2>
        }

        @if (ViewBag.subcategory != null && ViewBag.subcategory != "null")
        {
            <ol class="breadcrumb">
                <li>
                    @{ string category = ViewBag.category;
                        string action = StringExt.GenerateSlug(ViewBag.subcategory);
                        string controller = StringExt.GenerateSlug(ViewBag.category);
                    }
                    @Html.ActionLink(category, "", controller)
                </li>
                <li class="active">
                    <strong>@ViewBag.subcategory</strong>
                </li>
            </ol>
                        }
                        else
                        {
                            <ul class="nav nav-tabs pull-left hidden-xs" role="tablist">
                                @foreach (var subcategory in ViewBag.subcategories)
                                {
                                    string s = subcategory;
                                    <li role="presentation" class="@Html.IsSelected(action: s)"><a href="/@StringExt.GenerateSlug(subcategory)" aria-controls="home" role="tab">@subcategory</a></li>
                                }
                            </ul>
                            
                                <select onchange="this.options[this.selectedIndex].value && (window.location = this.options[this.selectedIndex].value);" class="form-control visible-xs">
                                    <option value="">Select job category...</option>
                                    @foreach (var subcategory in ViewBag.subcategories)
                                    {
                                        string s = subcategory;
                                        <option value="/@StringExt.GenerateSlug(subcategory)" role="presentation" class="@Html.IsSelected(action: s)"><a href="/@StringExt.GenerateSlug(subcategory)" aria-controls="home" role="tab">@subcategory</a></option>
                                    }
                                </select>
                        }


        <style>
            .nav-tabs {
                border-bottom: none;
            }

                .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {
                    border-width: 0;
                }

                .nav-tabs > li > a {
                    border: none;
                    color: #666;
                }

                    .nav-tabs > li.active > a, .nav-tabs > li > a:hover {
                        border: none;
                        color: #1ab394 !important;
                        background: transparent;
                    }

                    .nav-tabs > li > a::after {
                        content: "";
                        background: #1ab394;
                        height: 2px;
                        position: absolute;
                        width: 100%;
                        left: 0px;
                        bottom: -1px;
                        transition: all 250ms ease 0s;
                        transform: scale(0);
                    }

                .nav-tabs > li.active > a::after, .nav-tabs > li:hover > a::after {
                    transform: scale(1);
                }

            .tab-nav > li > a::after {
                background: #21527d none repeat scroll 0% 0%;
                color: #fff;
            }

            .tab-pane {
                padding: 15px 0;
            }

            .tab-content {
                padding: 20px;
            }
        </style>
    </div>
</div>
<div class="row wrapper wrapper-content">
    <div class="col-md-3 col-sm-4">
        <div class="">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Search Filters</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    @*<span data-bind="visible:availableCategories.length > 1">
                            <h5>Search by Category</h5>
                            <select id="select-category" class="demo-default" data-bind="options: availableCategories,
                           value: selectedCategory,
                           optionsCaption: 'Select category...'"></select>
                            <hr />
                        </span>*@

                    @{
                        string url = Request.Url.AbsoluteUri;
                        Uri myUri = new Uri(url);
                        string tags = HttpUtility.ParseQueryString(myUri.Query).Get("tags");
                        string minPrice = HttpUtility.ParseQueryString(myUri.Query).Get("minPrice");
                        string maxPrice = HttpUtility.ParseQueryString(myUri.Query).Get("maxPrice");
                        string q = HttpUtility.ParseQueryString(myUri.Query).Get("q");
                        string condition = HttpUtility.ParseQueryString(myUri.Query).Get("condition");
                        //add summary to results
                        <div style="display:none">
                            <div id="q-tags">@tags</div>
                            <div id="q-minPrice">@minPrice</div>
                            <div id="q-maxPrice">@maxPrice</div>
                            <div id="q-condition">@condition</div>
                        </div>
                    }

                    <form action="/@if (ViewBag.subcategory != null){<text>@StringExt.GenerateSlug(ViewBag.subcategory)</text> }
                    else
                    {<text>@StringExt.GenerateSlug(ViewBag.category)</text> }">
                        <h5>Search by Salary</h5>
                        <div class="row">
                            <div class="col-xs-6">
                                <div>
                                    <select id="from-price" class="demo-default" name="minPrice" data-bind="options: availableMinPrices,
                       value: selectedMinPrice,
                       optionsCaption: 'min salary'"></select>
                                </div>
                            </div>
                            <div class="col-xs-6">
                                <select id="to-price" class="demo-default" name="maxPrice" data-bind="options: availableMaxPrices,
                       value: selectedMaxPrice,
                       optionsCaption: 'max salary'"></select>
                            </div>
                        </div>
                        <hr />
                        <h5>Search by Tags</h5>
                        <input id="select-tag" data-bind="value:tags" name="tags" class="repositories" placeholder="Pick tags..." /><br />
                        <button class="btn  btn-default" data-bind="click:resetFilters">Reset</button>
                        <input class="btn btn-primary pull-right" type="submit" value="Update Results" />
                        <br />
                    </form>
                </div>
            </div>

            @Html.Partial("/Views/Shared/_CreateAlert.cshtml")
            <br /><br />
            <div class="hidden-xs">
                @*<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                <ins class="adsbygoogle"
                     style="display:block"
                     data-ad-client="ca-pub-3540353581324370"
                     data-ad-slot="3103703247"
                     data-ad-format="auto"></ins>
                <script>
(adsbygoogle = window.adsbygoogle || []).push({});
                </script>*@
            </div>
        </div>
    </div>
    <div class="col-md-7 col-sm-8">
        @if (Model != null)
        { <text> @Model.ItemsCount  results found
        @foreach (var ad in Model.Items)
        {
            <div class="row">
                <div class="ibox">
                    <div class="ibox-content product-box">
                        <div class="media">
                            @if (ad.category != "Jobs")
                            {
                                <a href="/Details/@ad.Id/@ad.title.GenerateSlug()" class="pull-left hidden-xs">
                                    <div class="product-imitation">
                                        <div class="carouselContainer">
                                            @if (ad.AdImages.Count != 0)
                                            {
                                                <div>
                                                    <img src="@ConfigurationManager.AppSettings["aws"]@ConfigurationManager.AppSettings["Bucketname"]/@ConfigurationManager.AppSettings["FolderName"]@(ad.Id +"_1")@ad.AdImages.FirstOrDefault().imageExtension" />
                                                </div>
                                            }
                                            @if (ad.AdImages.Count == 0)
                                            {
                                                <div><h2><br /><br /><br /><br /> No Images<br /><br /><br /><br /><br /></h2></div>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }

                            <div class="media-body">
                                <div class="product-desc">
                                    <span class="product-price">
                                        @if (ad.isnegotiable != "b")
                                        {
                                            if (ad.price != null)
                                            {
                                                decimal price = ad.price.HasValue ? ad.price.Value : 0;
                                                <text>@price.ToString("#,##0")</text><small style="font-size:13px">
                                                    @if (ad.maxPrice == null) {<text>Rs</text>}@*. @if (ad.isnegotiable == "y")
                                                        {<text>Negotiable</text> }
                                                        else if (ad.isnegotiable == "n")
                                                        { <text> <strike><strike>Negotiable</strike></strike> </text> }*@
                                        
                                                </small>
                                                if (ad.maxPrice != null)
                                                {
                                                    decimal price1 = ad.maxPrice.HasValue ? ad.maxPrice.Value : 0;
                                                    <text>- @price1.ToString("#,##0")</text><small style="font-size:13px"> Rs</small>
                                                        }
                                                        }
                                                        else
                                                        {
                                                        if (ad.category == "Jobs")
                                                        {
                                                        <text>Salary</text>
                                                        }
                                                        else
                                                        {
                                                        <text>Price</text>
                                                        }
                                                        <text>on contact</text>
                                                        }
                                                        }
                                                        else
                                                        {
                                                        if (ad.price != null)
                                                        {
                                                        if (ad.maxBid != null)
                                                        {
                                                        <text>@ad.maxBid.price.ToString("#,##0")</text> <small style="font-size:13px">Rs. (current Bid) </small>
                                                        }
                                                        else
                                                        {
                                                        decimal price = ad.price.HasValue ? ad.price.Value : 0;
                                                        <text>@price.ToString("#,##0")</text> <small style="font-size:13px">Rs. (Initial Bid) </small>
                                                        }
                                                        }
                                                        else
                                                        {
                                                        if (ad.maxBid == null)
                                                        {
                                                        <text>No bid yet</text>
                                                        }
                                                        else
                                                        {
                                                        <text>@ad.maxBid.price.ToString("#,##0")</text> <small style="font-size:13px">Rs. (current Bid) </small>
                                                        }
                                                        }
                                                        }
</span><br />
                                    <a class="product-name" href="/Details/@ad.Id/@ad.title.GenerateSlug()">@ad.title</a>



                                    <div class="small m-t-xs">
                                        @foreach (var tag in ad.AdTags)
                                        {
                                            <span @*target="_blank" href="/Tag/@tag.tagId/@tag.Tag.name.GenerateSlug()"*@ class="btn btn-xs btn-white">@tag.Tag.name </span>
                                        }
                                    </div><br />
                                    <span>@ad.category</span> @if (ad.subcategory != null && ad.subcategory != "")
                                    { <span> > @ad.subcategory </span> }
                                    @if (ad.subsubcategory != null && ad.subsubcategory != "")
                                    {
                                        <span> > @ad.subsubcategory</span>
                                    }
                                    @if (ad.brand != null && ad.brand != "")
                                    {
                                        <span> > @ad.brand</span>
                                    }
                                    @if (ad.model != null && ad.model != "")
                                    {
                                        <span> > @ad.model</span>
                                    } @if (ad.area != null && ad.area != "")
                                    {
                                        <span> > @ad.area</span>
                                    }
                                    @if (ad.bedroom != null && ad.bedroom != "")
                                    {
                                        <span> > @ad.bedroom</span>
                                    }
                                    @if (ad.exprience != null && ad.exprience != "")
                                    {
                                        <span> > @ad.exprience</span>
                                    } @if (ad.qualification != null && ad.qualification != "")
                                    {
                                        <span> > @ad.qualification</span>
                                    }
                                    <div>@ad.description.Truncate(150)</div>

                                    @*<span data-bind="visible:brand"> > <span data-bind="text:brand"></span></span> <span data-bind="visible:model"> > <span data-bind="text:model"></span></span>

                                        <span data-bind="visible:area"><b> Area:</b> <span data-bind="text:area"> </span>sq ft </span> <span data-bind="visible:bedroom"><b> Bedroom: </b><span data-bind="text:bedroom"></span></span>
                                                              <span data-bind="visible:exprience"><b>Experience:</b><span data-bind="if:exprience  == 'f'">Fresh Graduate</span><span data-bind="if:exprience  == 'n'">Not required</span><span data-bind="if:exprience != 'f' && exprience !='n' && exprience != ''"> <span data-bind="text:exprience"></span> year</span></span>
                                                              <span data-bind="visible:qualification"><b>Qualification: </b><span data-bind="text:qualification"></span></span><br /><br />*@
                                    @*<div data-bind="truncatedText: description, maxTextLength: 150"></div>*@
                                    <div class="pull-right"><i class="fa fa-clock-o"></i> <span></span>@UrlHelperExtensions.Timeago(ad.time)</div>

                                    <div class="">
                                        @if (ad.AdsLocation != null)
                                        {
                                            if (ad.AdsLocation.City.cityName != null && ad.AdsLocation.City.cityName != "")
                                            {
                                                <b class="hidden-xs">From:</b>
                                                if (ad.AdsLocation.popularPlace != null)
                                                {
                                                    if (ad.AdsLocation.popularPlace.name != "")
                                                    {
                                                        <span>@ad.AdsLocation.popularPlace.name, </span>}
                                                }
                                                <span> @ad.AdsLocation.City.cityName</span>
                                            }
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        }
        </text>
        }
        else
        {<text>No results found. Please try something else</text>}
        <!-- pager -->

        @if (Model.Pager.EndPage > 1)
        {
            <br />
            <ul class="pagination">
                @if (Model.Pager.CurrentPage > 1)
                {
                    <li>
                        <a href="@Url.RouteUrl(actionLink, new { minPrice = minPrice, maxPrice = maxPrice, tags = tags, condition = condition })">First Page</a>
                    </li>
                    <li>
                        <a href="@Url.RouteUrl(actionLink, new { minPrice = minPrice, maxPrice = maxPrice, tags = tags, condition = condition, page = Model.Pager.CurrentPage - 1 })">Previous</a>
                    </li>
                }

                @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                        <a href="@Url.RouteUrl(actionLink, new { minPrice = minPrice, maxPrice = maxPrice, tags = tags, condition = condition, page =page })">@page.ToString()</a>

                    </li>
                }

                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a href="@Url.RouteUrl(actionLink, new { minPrice = minPrice, maxPrice = maxPrice, tags = tags, condition = condition, page = Model.Pager.CurrentPage + 1 })">Next</a>
                    </li>
                    @*<li>
                        <a href="@Url.RouteUrl(actionLink, new { minPrice = minPrice, maxPrice = maxPrice, tags = tags, condition = condition, page = Model.Pager.TotalPages })">Last</a>
                    </li>*@
                }
            </ul>

            <br /><br />
        }
        <div class="visible-xs">
            <br />
            @*<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
            <ins class="adsbygoogle"
                 style="display:block"
                 data-ad-client="ca-pub-3540353581324370"
                 data-ad-slot="3103703247"
                 data-ad-format="auto"></ins>
            <script>
(adsbygoogle = window.adsbygoogle || []).push({});
            </script>*@
            <br />
        </div>
    </div>
</div>

<style>
    .carouselContainer {
        overflow: hidden;
        //height:350px;
        margin: 0px;
        padding: 0px;
    }

    #gallery {
        margin: 0px;
        padding: 0px;
    }

    .product-imitation {
        margin: 0px;
        padding: 0px;
        width: 250px !important;
        height: 250px;
        /apply max-padding or default image;
    }

    .carouselContainer img {
        // height: 350px;
        width: 250px !important;
        height: 250px;
    }

    .showAds .ibox {
        height: 420px;
    }

    .product-price {
        top: 0px;
    }
</style>


@section Styles {
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/bundles/tagStyles")
}


@section Scripts{
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/ionRange")
    <script src="~/Scripts/app/CreateAlert.js"></script>
    <script src="~/Scripts/app/_Truncate-knockout-binding.js"></script>
    <script src="~/Scripts/app/GetLoginUserId.js"></script>

    <script>
        $('#select-tag').selectize({
            valueField: 'name',
            labelField: 'name',
            searchField: 'name',
            options: [],
            maxItems: 4,
            createFilter: function (input) { return input.length <= 18; },
            render: {
                option: function (item, escape) {
                    return '<div>' +
                        '<span class="title">' +
                            '<span class="name">' + escape(item.name) + '</span>' +

                        '</span>' +
                        '<span class="description">' + escape(item.info) + '</span>' +
                        '<ul class="meta">' +
                            '<li class="watchers"><span>' + escape(item.followers) + '</span> followers</li>' +
                            '<li class="forks"><span>' + escape(item.questions) + '</span> times used</li>' +
                        '</ul>' +
                    '</div>';
                }
            },
            load: function (query, callback) {
                if (!query.length) return callback();
                $.ajax({
                    url: '/api/Tag/SearchTags?s=' + encodeURIComponent(query),
                    type: 'GET',
                    error: function () {
                        callback();
                    },
                    success: function (res) {
                        callback(res.slice(0, 10));
                    }
                });
            }
        });
        var q_tags = $("#q-tags").text();
        var tags = ko.observable(q_tags);
        //set values in selectize

        var q_minPrice = $("#q-minPrice").text();
        var q_maxPrice = $("#q-maxPrice").text();
        var selectize_tags = $("#select-tag")[0].selectize;
        if (q_tags != "" && q_tags != null) {
            var q_tags_array = q_tags.split(',');
            var selectedTags = [];
            $.each((q_tags_array), function (i, item) { selectedTags.push(item) });
            $.each((selectedTags), function (i, item) {
                selectize_tags.addOption({
                    text: item,
                    value: item,
                    name: item,
                });
                selectize_tags.addItem(item);
            });
        }
        var availableMaxPrices = ["500", "1000", "2000", "5000", "10000", "15000", "20000", "25000"];
        var availableMinPrices = ["500", "1000", "2000", "5000", "10000", "15000", "20000", "25000"];
        var selectedMinPrice = null;
        var selectedMaxPrice = null;
        selectedMinPrice = $("#q-minPrice").text() || 0;
        if (selectedMinPrice) {
            selectedMinPrice = selectedMinPrice.split(',')[0];
        }
        selectedMaxPrice = $("#q-maxPrice").text() || 0;
        if (selectedMaxPrice) {
            selectedMaxPrice = selectedMaxPrice.split(',')[0];
        }


      //  $(".carouselContainer").slick();
        function viewModel() {
            SearchingLocation();
            CreateAlert();
            ChatViewModel();
            AccountViewModel();
            $.ajax({
                url: '/api/Electronic/GetBrands',
                dataType: "json",
                contentType: "application/json",
                cache: false,
                type: 'GET',
                success: function (data) {


                    $("#to-price").selectize({
                        create: true,
                    });
                    selectedMinPrice = $("#q-minPrice").text() || 0;
                    if (selectedMinPrice) {
                        selectedMinPrice = selectedMinPrice.split(',')[0];
                    }
                    selectedMaxPrice = $("#q-maxPrice").text() || 0;
                    if (selectedMaxPrice) {
                        selectedMaxPrice = selectedMaxPrice.split(',')[0];
                    }
                    $("#from-price").selectize({
                        create: true,
                    });
                    if (selectedMinPrice != 0) {
                        if ($.inArray(selectedMinPrice, availableMinPrices) == -1) {
                            var minPrice_selectize = $("#from-price")[0].selectize;
                            minPrice_selectize.addOption({
                                text: selectedMinPrice,
                                value: selectedMinPrice
                            });
                            minPrice_selectize.addItem(selectedMinPrice);
                        }
                    }
                    if (selectedMaxPrice != 0) {
                        if ($.inArray(selectedMaxPrice, availableMaxPrices) == -1) {
                            var maxPrice_selectize = $("#to-price")[0].selectize;
                            maxPrice_selectize.addOption({
                                text: selectedMaxPrice,
                                value: selectedMaxPrice
                            });
                            maxPrice_selectize.addItem(selectedMaxPrice);
                        }
                    }
                },
                error: function (jqXHR, status, thrownError) {
                }
            });
            //below can is just to initialize from-price and to-price.



        }
        var resetFilters = function () {
            var selectize_tags1 = $("#select-tag")[0].selectize;
            selectize_tags1.clear();
            var selectize_min = $("#from-price")[0].selectize;
            selectize_min.clear();
            var selectize_max = $("#to-price")[0].selectize;
            selectize_max.clear();
            minPrice = 0;
            maxPrice = 50000;
        }
        function getTimeAgo(varDate) {
            if (varDate) {
                return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
            }
            else {
                return '';
            }
        }

        ko.bindingHandlers.jqAutoresize = {
            init: function (element, valueAccessor, aBA, vm) {
                if (!$(element).hasClass('msgTextArea')) {
                    $(element).css('height', '1em');
                }
                $(element).autosize();
            }
        };

        $(function () {
            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            ko.applyBindings(new viewModel);
            var length = $(window).width();
            if (length < 786) { //770
                $(".collapse-link").click();
                $(".product-desc").css({ "padding": "0px" });
                $(".product-price").css({ "color": "green", "background": "none" });
            }
        });

    </script>
}
