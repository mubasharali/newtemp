@{
    ViewBag.Title = "Mobiles";
}

@*<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2>Mobiles</h2>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink("List", "Index")
            </li>
            <li class="active">
                <strong>Mobiles</strong>
            </li>
        </ol>
    </div>
</div>*@

@*<style>
    .carouselContainer {
        overflow: hidden;
        //height:350px;
        margin: 0px;
        padding: 0px;
    }

    #gallery {
        margin: 0px;
        padding: 0px;
    }

    .product-imitation {
        margin: 0px;
        padding: 0px;
        /apply max-padding or default image;
    }

    .carouselContainer img {
        // height: 350px;
        width: 250px;
        height: 250px;
    }
    .showAds .ibox {
        height: 420px;
    }
</style>*@
<div id="search">@ViewBag.search</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-sm-3 col-md-3 col-lg-3">
            <div class="">
                @Html.Partial("/Views/Electronics/_TreeMobile.cshtml")
                <div class="ibox-title"><h5> search by tags</h5></div>
                <div class="ibox-content"><input id="select-tag" data-bind="value:tags" class="repositories" placeholder="Pick tags..." /></div>
                <div class="ibox-title"><h5> search by Price</h5></div>
                <div id="ionrange_1"></div>
                @Html.Partial("/Views/Shared/_CreateAlert.cshtml")
            </div>
        </div>
        <div class="col-sm-9 col-md-9 col-lg-7">
            <div data-bind="visible:isLoading()">
                @Html.Partial("/Views/Shared/_LoadingBoxes.cshtml")
            </div>
            <div data-bind="visible:!isLoading()">
                <a data-bind="visible:!mobileAccessories(),click:function(){ return createAd('/MobilesTablets/Create')}" class="pull-right btn btn-danger">Create Mobile Ad</a>
                <a data-bind="visible:mobileAccessories(),click:function(){ return createAd('/MobilesTablets/CreateMobileAccessoriesAd')}" class="pull-right btn btn-danger">Create Mobile Accessories Ad</a>
                <span data-bind="text:showAds().length"> </span> results found<br />
                <b>Summary:</b> Showing <span data-bind="visible: !( minPrice() != 0 || maxPrice() != 50000 || searchingCity() || brand() || model() || tags() )"> all </span> <b> <span data-bind="visible:mobileAccessories()"> Mobile Accessories </span> <span data-bind="visible:!mobileAccessories()">Mobiles</span> </b><span data-bind="visible:brand || model"> of </span> <b> <span data-bind="text:brand"></span> <span data-bind="text:model"> </b>
                <span data-bind="visible:tags()"> with tags <b> '<span data-bind="text:tags"></span>' </b></span>

                <span data-bind="visible:minPrice()!= 0 && maxPrice()!= 50000">
                    with price from <b> <span data-bind="text:minPrice"></span> </b> to <b> <span data-bind="text:maxPrice"></span></b>
                </span>
                <span data-bind="visible:! (minPrice()!= 0 && maxPrice()!= 50000)">
                    <span data-bind="visible:minPrice() != 0"> with min price <b> <span data-bind="text:minPrice"></span> </b> </span>
                    <span data-bind="visible:maxPrice()!= 50000">with max price <b> <span data-bind="text:maxPrice"></span> </b> </span>
                </span>
                <span data-bind="visible:searchingCity"> from <b> <span data-bind="visible:searchingPP"><span data-bind="text:searchingPP"></span>,</span> <span data-bind="text:searchingCity"></span> </b> </span>
                <div @*class="row showAds"*@ data-bind="foreach:showAds">
                    @Html.Partial("/Views/Shared/_AdListView.cshtml")
                    @*<div class="col-md-4 col-sm-6 col-lg-3">
                    <div class="ibox">
                        <div class="ibox-content product-box">

                            <div class="product-imitation">
                                <div class="carouselContainer">
                                    <span id="gallery" data-gallery=""
                                          data-bind="slick: images,
                slickOptions: { initialSlide:0},
                slickIndex: imageIndex">
                                    </span>
                                    <div data-bind="visible:images().length == 0"><h2><br /><br /><br /><br /> No Images<br /><br /><br /><br /><br /></h2></div>
                                </div>
                            </div>
                            <div class="product-desc">
                                <span class="product-price">
                                    <span data-bind="if:!isBidingAllowed">
                                        <span data-bind="if:price">
                                            <span data-bind="text:price"></span> <small style="font-size:13px" class="text-muted">Rs. <span data-bind="html:isNegotiable"></span></small>
                                        </span>
                                        <span data-bind="if:!price">Price on contact</span>
                                    </span>
                                    <span data-bind="if:isBidingAllowed">
                                        <span data-bind="if:price">
                                            <span data-bind="if:highestBid() == '-Infinity'">
                                                <span data-bind="text:price"></span> <small style="font-size:13px" class="text-muted ">Rs. (Initial Bid) </small>
                                            </span>
                                            <span data-bind="ifnot:highestBid() == '-Infinity'">
                                                <span data-bind="text:highestBid"></span> <small style="font-size:13px" class="text-muted ">Rs. (current Bid) </small>
                                            </span>
                                        </span>
                                        <span data-bind="if:!price">
                                            <span data-bind="if:highestBid() == '-Infinity'">
                                                No Bit yet
                                            </span>
                                            <span data-bind="ifnot:highestBid() == '-Infinity'">
                                                <span data-bind="text:highestBid"></span> <small style="font-size:13px" class="text-muted ">Rs. (current Bid) </small>
                                            </span>
                                        </span>
                                    </span>
                                </span>
                                <small class="text-muted">Mobile</small>
                                <a href="#" class="product-name" data-bind="text:title,attr:{href:link}"> </a>



                                <div class="small m-t-xs" data-bind="foreach:showTags">
                                    <a target="_blank" data-bind="attr:{href:'/Tag/'+name}"> <span class="btn btn-xs btn-white" data-bind="text:name"></span></a>
                                </div>
                                <div class="m-t text-righ">

                                    <a href="#" class="btn btn-xs btn-outline btn-primary">Info <i class="fa fa-long-arrow-right"></i> </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
                </div>
            </div>
        </div>
        @*<div class="col-lg-3"></div>*@
    </div>
</div>
@Html.Partial("/Views/Shared/_Chat.cshtml")
@Html.Partial("~/Views/Shared/_UserLogin.cshtml")
@section Styles {
    @Styles.Render("~/plugins/slickStyles")
    @Styles.Render("~/plugins/slickThemeStyles")
    @Styles.Render("~/plugins/toastrStyles")
    @Styles.Render("~/Content/plugins/jsTree")
@Styles.Render("~/bundles/tagStyles")
@Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
}

@section Scripts{
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/timeago")
    @Scripts.Render("~/plugins/autosize")
    @Scripts.Render("~/plugins/knockout")
    @Scripts.Render("~/plugins/slick")
    @Scripts.Render("~/plugins/jsTree")
@Scripts.Render("~/plugins/ionRange")
@Scripts.Render("~/plugins/truncate")
    <script src="~/Scripts/app/MobileTree.js"></script>
    
<script src="~/Scripts/app/slick-knockout-binding.js"></script>
<script src="~/Scripts/app/CreateAlert.js"></script>
<script src="~/Scripts/app/_AdListView.js"></script>
<script src="~/Scripts/app/_Truncate-knockout-binding.js"></script>
<script src="~/Scripts/app/GetLoginUserId.js"></script>
    <script>
        
        //function Tag(data) {
        //    var self = this;
        //    data = data || {};
        //    self.id = data.id;
        //    self.name = data.name;
        //}
        //function Bid(data) {
        //    var self = this;
        //    data = data || {};
        //    self.price = data.price;
        //}
        //var imageUrls = [];
        //function adImages(data, adId, imagesCount) {
        //    return "/Images/Ads/" + adId + '_' + imagesCount + data.imageExtension;
        //}
        //function ad(data) {
        //    var self = this;

        //    self.images = ko.observable();
        //    self.options = {};
        //    self.imageIndex = ko.observable(1);

        //    data = data || {};
        //    self.title = data.title;
        //    self.description = ko.observable(data.description);
        //    self.postedByName = data.postedByName;
        //    self.postedById = data.postedById;
        //    self.id = data.id;
        //    self.time = getTimeAgo(data.time);
        //    self.loginUserId = data.islogin || "";
        //    self.showMobileAd = ko.observableArray();
        //    self.isReported = ko.observable(data.isReported);
        //    self.reportedCount = ko.observable(data.reportedCount);
        //    self.showImages = ko.observable();
        //    self.views = data.views;
        //    self.price = data.price || "";
        //    self.link = "/MobilesTablets/Details/" + data.id;
        //    var loginUserId1 = getLoginUserId(self.loginUserId); //to access self.loginUserId outside this function
        //    //biding
        //    self.highestBid = ko.observable();
        //    self.showBidings = ko.observableArray();
        //    self.isBidingAllowed = false;
        //    self.placeBid = ko.observable(false);
        //    self.bidAmount = ko.observable();

        //    self.showTags = ko.observableArray();

        //    self.sellerProfile = function () {
        //        window.location.href = "/User/Index/" + self.postedById;
        //    }

        //    if (data.isNegotiable == "b") {
        //        self.isBidingAllowed = true;
        //    } else if (data.isNegotiable == "y") {
        //        self.isNegotiable = 'Negotiable';
        //    } else if (data.isNegotiable == "n") {
        //        self.isNegotiable = '<strike>Negotiable</strike>';
        //    }
        //    if (self.price == "") {
        //        self.isNegotiable = "";
        //    }
        //    if (data.bid != null) {
        //        var biding = $.map(data.bid, function (item) { return new Bid(item); });
        //        self.highestBid(Math.max.apply(Math, data.bid.map(function (o) { return o.price; })));
        //        //self.showBidings(biding);
        //    }
        //    if (data.adTags != null) {
        //        var tags = $.map(data.adTags, function (item) { return new Tag(item); });
        //        self.showTags(tags);
        //    }
        //    if (data.adImages) {
        //        var imagesCount = 1;
        //        var img = $.map(data.adImages, function (item, ia) { return adImages(item, data.id, imagesCount++); });
        //        self.showImages(img);
        //        self.images(img);
        //    }
        //    self.report = function (id, loginUserId) {
        //        if (loginUserId) {
        //            $.ajax({
        //                url: '/api/Electronic/reportAd?id=' + id,
        //                dataType: "json",
        //                contentType: "application/json",
        //                cache: false,
        //                type: 'POST',
        //                success: function (data) {
        //                    self.isReported(true);
        //                    self.reportedCount(data);
        //                },
        //                error: function (xhr, status, error) {
        //                    var err = eval("(" + xhr.responseText + ")");
        //                    toastr.info(err.Message);
        //                }
        //            })
        //        } else {
        //            toastr.info("You must be login to report this ad", "Na na!");
        //        }
        //    }
        //}

        function viewModel() {
            
            SearchingLocation();
            TreeViewModel();
            RefreshSearch();
            AccountViewModel();
            ChatViewModel();
            CreateAlert();
            var self = this;

            return self;
        }
        $('#select-tag').selectize({
            valueField: 'name',
            labelField: 'name',
            searchField: 'name',
            options: [],
            maxItems: 4,
            render: {
                option: function (item, escape) {
                    return '<div>' +
                        '<span class="title">' +
                            '<span class="name">' + escape(item.name) + '</span>' +

                        '</span>' +
                        '<span class="description">' + escape(item.info) + '</span>' +
                        '<ul class="meta">' +
                            '<li class="watchers"><span>' + escape(item.followers) + '</span> followers</li>' +
                            '<li class="forks"><span>' + escape(item.questions) + '</span> times used</li>' +
                        '</ul>' +
                    '</div>';
                }
            },
            load: function (query, callback) {
                if (!query.length) return callback();
                $.ajax({
                    url: '/api/Tag/SearchTags?s=' + encodeURIComponent(query),
                    type: 'POST',
                    error: function () {
                        callback();
                    },
                    success: function (res) {
                        callback(res.slice(0, 10));
                    }
                });
            }
        });
        
        function getTimeAgo(varDate) {
            if (varDate) {
                return $.timeago(varDate.toString().slice(-1) == 'Z' ? varDate : varDate + 'Z');
            }
            else {
                return '';
            }
        }
        ko.bindingHandlers.jqAutoresize = {
            init: function (element, valueAccessor, aBA, vm) {
                if (!$(element).hasClass('msgTextArea')) {
                    $(element).css('height', '1em');
                }
                $(element).autosize();
            }
        };
        
        
        $(function () {
            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            ko.applyBindings(new viewModel);
            
        });

    </script>
}










