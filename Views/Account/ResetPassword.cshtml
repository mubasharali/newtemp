@model Inspinia_MVC5_SeedProject.Models.ManageUserViewModel
@{
    ViewBag.Title = "ResetPassword";
}
<div class="row">
    <div class="col-sm-offset-4 col-sm-4">

       

        <h2>ResetPassword</h2>
        @if (TempData["LError"] != null)
        {
            <div class="alert alert-success alert-dismissable">
                <button aria-hidden="true" data-dismiss="alert" class="close" type="button">×</button>
                <h3> @Html.Raw(TempData["LError"])  </h3>
            </div>
        }
        @using (Html.BeginForm("ConfirmPasswordRecoveryToken", "Account", FormMethod.Post, new { @class = "form-horizontal",id="form", role = "form" }))
        {
            @Html.AntiForgeryToken()

            <h4></h4>
            <hr />
            @Html.ValidationSummary()
            <input type="hidden" name="userId" value="@ViewBag.userId" />
            <input type="hidden" name="code" value="@ViewBag.code" />
            
            <div class="form-group"><label>Enter New Password</label> <input type="password" name="password" data-bind="value:Ppassword" placeholder="Enter a Password" class="form-control"></div>
            <div class="form-group"><label>Confirm Password</label> <input type="password" data-bind="value:PconfirmPassword" placeholder="Again Enter your Password" class="form-control"></div>
            <p class="req" data-bind="text:PError"></p>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Set password" class="btn btn-primary" />
                </div>
            </div>
        }
    </div>
</div>
@section Scripts{
    @Scripts.Render("~/plugins/knockout")  
    
      <script>

        function viewModel() {
            SearchingLocation();
            ChatViewModel();
            AccountViewModel();
            var self = this;
            self.PError = ko.observable();
            self.Ppassword = ko.observable();
            self.PconfirmPassword = ko.observable();
            $("#form").submit(function (e) {
              //  e.preventDefault();
                self.PError("");
                if (self.Ppassword() === self.PconfirmPassword()) {
                    if (typeof self.Ppassword() != "undefined") {
                        return true;
                    }
                    else {
                        self.PError("Please enter password");
                        return false;
                    }
                }
                else {
                    self.PError("password does not match");
                    return false;
                }
            });
            return self;
        }
        //tree

        $(function () {
           
            toastr.options = {
                closeButton: true,
                progressBar: true,
                preventDuplicates: true,
                positionClass: 'toast-top-right',
                onclick: null
            };
            ko.applyBindings(new viewModel);
        });

    </script>
}



